http:
 #region routers 
  routers:
    proxmox:
      entryPoints:
        - "https"
      rule: "Host(`proxmox.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: proxmox

    pi-hole:
      entryPoints:
        - "https"
      rule: "Host(`pi-hole.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
        - pi-hole-redirect
      tls: {}
      service: pi-hole

    home-assistant:
      entryPoints:
        - "https"
      rule: "Host(`home-assistant.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: home-assistant

    truenas:
      entryPoints:
        - "https"
      rule: "Host(`truenas.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: truenas

    homepage:
      entryPoints:
        - "https"
      rule: "Host(`homepage.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: homepage

    unifi:
      entryPoints:
        - "https"
      rule: "Host(`unifi.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: unifi
    
    jellyfin:
      entryPoints:
        - "https"
      rule: "Host(`jellyfin.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: jellyfin

    jellyseerr:
      entryPoints:
        - "https"
      rule: "Host(`jellyseerr.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: jellyseerr

    qbittorrent:
      entryPoints:
        - "https"
      rule: "Host(`qbittorrent.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: qbittorrent

    radarr:
      entryPoints:
        - "https"
      rule: "Host(`radarr.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: radarr
    
    sonarr:
      entryPoints:
        - "https"
      rule: "Host(`sonarr.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: sonarr

    prowlarr:
      entryPoints:
        - "https"
      rule: "Host(`prowlarr.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: prowlarr

    bazarr:
      entryPoints:
        - "https"
      rule: "Host(`bazarr.local.pyer.xyz`)"
      middlewares:
        - default-headers
        - https-redirectscheme
      tls: {}
      service: bazarr
  
#endregion
#region services
  services:
    proxmox:
      loadBalancer:
        servers:
          - url: "https://192.168.20.2:8006"
        passHostHeader: true

    pi-hole:
      loadBalancer:
        servers:
          - url: "http://192.168.20.106:8888"
        passHostHeader: true
    
    home-assistant:
      loadBalancer:
        servers:
          - url: "http://192.168.20.104:8123"
        passHostHeader: true

    truenas:
      loadBalancer:
        servers:
          - url: "https://192.168.20.101"
        passHostHeader: true

    homepage:
      loadBalancer:
        servers:
          - url: "http://192.168.20.106:3000"
        passHostHeader: true
    
    unifi:
      loadBalancer:
        servers:
          - url: "https://192.168.10.1"
        passHostHeader: true

    jellyfin:
      loadBalancer:
        servers:
          - url: "http://192.168.20.103:8096"
        passHostHeader: true
    
    jellyseerr:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:5055"
        passHostHeader: true
    
    qbittorrent:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:8085"
        passHostHeader: true
    
    radarr:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:7878"
        passHostHeader: true
    
    sonarr:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:8989"
        passHostHeader: true

    prowlarr:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:9696"
        passHostHeader: true

    bazarr:
      loadBalancer:
        servers:
          - url: "http://192.168.20.102:6767"
        passHostHeader: true

#endregion
  middlewares:
    https-redirectscheme:
      redirectScheme:
        scheme: https
        permanent: true
    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNosniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: SAMEORIGIN
        customRequestHeaders:
          X-Forwarded-Proto: https

    middlewares-authentik:
      forwardAuth:
        address: "http://authentik_server:9000/outpost.goauthentik.io/auth/traefik"
        trustForwardHeader: true
        authResponseHeaders:
          - X-authentik-username
          - X-authentik-groups
          - X-authentik-email
          - X-authentik-name
          - X-authentik-uid
          - X-authentik-jwt
          - X-authentik-meta-jwks
          - X-authentik-meta-outpost
          - X-authentik-meta-provider
          - X-authentik-meta-app
          - X-authentik-meta-version

    default-whitelist:
      ipAllowList:
        sourceRange:
        - "192.168.0.0/16"

    secured:
      chain:
        middlewares:
        - default-whitelist
        - default-headers

    # pi-hole redirect, Redirects https://pi-hole.local.pyer.xyz -> https://pi-hole.local.pyer.xyz/admin
    pi-hole-redirect:
      redirectRegex:
        regex: "^https://([^/]+)/?$"
        replacement: "https://${1}/admin/"